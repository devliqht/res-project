{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\web\\\\res-project\\\\frontend\\\\src\\\\components\\\\QRCodeScanner.js\",\n  _s = $RefreshSig$();\n// file = Html5QrcodePlugin.jsx\nimport { Html5QrcodeScanner } from 'html5-qrcode';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst qrcodeRegionId = \"html5qr-code-full-region\";\n\n// Creates the configuration object for Html5QrcodeScanner.\nconst createConfig = props => {\n  let config = {};\n  if (props.fps) {\n    config.fps = props.fps;\n  }\n  if (props.qrbox) {\n    config.qrbox = props.qrbox;\n  }\n  if (props.aspectRatio) {\n    config.aspectRatio = props.aspectRatio;\n  }\n  if (props.disableFlip !== undefined) {\n    config.disableFlip = props.disableFlip;\n  }\n  return config;\n};\nconst Html5QrcodePlugin = props => {\n  _s();\n  useEffect(() => {\n    // when component mounts\n    const config = createConfig(props);\n    const verbose = props.verbose === true;\n    // Suceess callback is required.\n    if (!props.qrCodeSuccessCallback) {\n      throw \"qrCodeSuccessCallback is required callback.\";\n    }\n    const html5QrcodeScanner = new Html5QrcodeScanner(qrcodeRegionId, config, verbose);\n    html5QrcodeScanner.render(props.qrCodeSuccessCallback, props.qrCodeErrorCallback);\n\n    // cleanup function when component will unmount\n    return () => {\n      html5QrcodeScanner.clear().catch(error => {\n        console.error(\"Failed to clear html5QrcodeScanner. \", error);\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: qrcodeRegionId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Html5QrcodePlugin, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Html5QrcodePlugin;\nexport default Html5QrcodePlugin;\nvar _c;\n$RefreshReg$(_c, \"Html5QrcodePlugin\");","map":{"version":3,"names":["Html5QrcodeScanner","useEffect","jsxDEV","_jsxDEV","qrcodeRegionId","createConfig","props","config","fps","qrbox","aspectRatio","disableFlip","undefined","Html5QrcodePlugin","_s","verbose","qrCodeSuccessCallback","html5QrcodeScanner","render","qrCodeErrorCallback","clear","catch","error","console","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/web/res-project/frontend/src/components/QRCodeScanner.js"],"sourcesContent":["// file = Html5QrcodePlugin.jsx\r\nimport { Html5QrcodeScanner } from 'html5-qrcode';\r\nimport { useEffect } from 'react';\r\n\r\nconst qrcodeRegionId = \"html5qr-code-full-region\";\r\n\r\n// Creates the configuration object for Html5QrcodeScanner.\r\nconst createConfig = (props) => {\r\n    let config = {};\r\n    if (props.fps) {\r\n        config.fps = props.fps;\r\n    }\r\n    if (props.qrbox) {\r\n        config.qrbox = props.qrbox;\r\n    }\r\n    if (props.aspectRatio) {\r\n        config.aspectRatio = props.aspectRatio;\r\n    }\r\n    if (props.disableFlip !== undefined) {\r\n        config.disableFlip = props.disableFlip;\r\n    }\r\n    return config;\r\n};\r\n\r\nconst Html5QrcodePlugin = (props) => {\r\n\r\n    useEffect(() => {\r\n        // when component mounts\r\n        const config = createConfig(props);\r\n        const verbose = props.verbose === true;\r\n        // Suceess callback is required.\r\n        if (!(props.qrCodeSuccessCallback)) {\r\n            throw \"qrCodeSuccessCallback is required callback.\";\r\n        }\r\n        const html5QrcodeScanner = new Html5QrcodeScanner(qrcodeRegionId, config, verbose);\r\n        html5QrcodeScanner.render(props.qrCodeSuccessCallback, props.qrCodeErrorCallback);\r\n\r\n        // cleanup function when component will unmount\r\n        return () => {\r\n            html5QrcodeScanner.clear().catch(error => {\r\n                console.error(\"Failed to clear html5QrcodeScanner. \", error);\r\n            });\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div id={qrcodeRegionId} />\r\n    );\r\n};\r\n\r\nexport default Html5QrcodePlugin;"],"mappings":";;AAAA;AACA,SAASA,kBAAkB,QAAQ,cAAc;AACjD,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAG,0BAA0B;;AAEjD;AACA,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC5B,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAID,KAAK,CAACE,GAAG,EAAE;IACXD,MAAM,CAACC,GAAG,GAAGF,KAAK,CAACE,GAAG;EAC1B;EACA,IAAIF,KAAK,CAACG,KAAK,EAAE;IACbF,MAAM,CAACE,KAAK,GAAGH,KAAK,CAACG,KAAK;EAC9B;EACA,IAAIH,KAAK,CAACI,WAAW,EAAE;IACnBH,MAAM,CAACG,WAAW,GAAGJ,KAAK,CAACI,WAAW;EAC1C;EACA,IAAIJ,KAAK,CAACK,WAAW,KAAKC,SAAS,EAAE;IACjCL,MAAM,CAACI,WAAW,GAAGL,KAAK,CAACK,WAAW;EAC1C;EACA,OAAOJ,MAAM;AACjB,CAAC;AAED,MAAMM,iBAAiB,GAAIP,KAAK,IAAK;EAAAQ,EAAA;EAEjCb,SAAS,CAAC,MAAM;IACZ;IACA,MAAMM,MAAM,GAAGF,YAAY,CAACC,KAAK,CAAC;IAClC,MAAMS,OAAO,GAAGT,KAAK,CAACS,OAAO,KAAK,IAAI;IACtC;IACA,IAAI,CAAET,KAAK,CAACU,qBAAsB,EAAE;MAChC,MAAM,6CAA6C;IACvD;IACA,MAAMC,kBAAkB,GAAG,IAAIjB,kBAAkB,CAACI,cAAc,EAAEG,MAAM,EAAEQ,OAAO,CAAC;IAClFE,kBAAkB,CAACC,MAAM,CAACZ,KAAK,CAACU,qBAAqB,EAAEV,KAAK,CAACa,mBAAmB,CAAC;;IAEjF;IACA,OAAO,MAAM;MACTF,kBAAkB,CAACG,KAAK,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;QACtCC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAChE,CAAC,CAAC;IACN,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACInB,OAAA;IAAKqB,EAAE,EAAEpB;EAAe;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEnC,CAAC;AAACd,EAAA,CAxBID,iBAAiB;AAAAgB,EAAA,GAAjBhB,iBAAiB;AA0BvB,eAAeA,iBAAiB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}